import { FormControlBasicMetadata, FormControlData, FormController, ImmutableFormController } from "rx-store-form-plugin/main/interfaces";
export declare const createUseFormData: <F extends FormControlData, M extends Partial<Record<F[number]["field"], FormControlBasicMetadata>>, S extends string>(formControl: FormController<F, M, S>) => <N extends number[] = number[]>(fields?: F[N[number]]["field"][] | undefined) => ReturnType<Record<S, () => F>[S]> | F[N[number]][];
export declare const createUseImmutableFormData: <F extends FormControlData, M extends Partial<Record<F[number]["field"], FormControlBasicMetadata>>, S extends string>(formControl: ImmutableFormController<F, M, S>) => <N extends number[] = number[]>(fields?: F[N[number]]["field"][] | undefined) => ReturnType<Record<S, () => import("immutable").List<import("immutable").Map<keyof F[number], import("rx-store-form-plugin/main/interfaces").V<F[number]>>>>[S]> | import("immutable").List<import("immutable").Map<keyof F[N[number]], import("rx-store-form-plugin/main/interfaces").PV<F[N[number]]>>>;
